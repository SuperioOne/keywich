import {parse_KeyOptions} from "@keywitch/rpc/parsers";

/**
 * @type {WeakMap<import("@keywitch/rpc").KeyMetadataItem, string>}
 */
const IMAGE_STORE = new WeakMap();

/**
 * @type {import("@keywitch/rpc").KeyMetadataItem[]}
 */
const MEMORY_STORE = [
  {
    charset: "A..Za..z",
    domain: "example.com",
    notes: "test notes",
    pinned: false,
    id: 1,
    revision: 1,
    target_size: 12,
    user_name: "admin",
    created_at: Date.now() - 100000,
    tags: ["hello", "tag1", "tag2"]
  },
  {
    charset: "A..Za..z",
    domain: "example-2.com",
    notes: "test notes 2",
    pinned: true,
    id: 2,
    revision: 1,
    target_size: 12,
    user_name: "admin",
    created_at: Date.now() - 10000012,
    tags: []
  }
];
let NEXT_ID = 3;
const example_qr_raw = `<?xml version="1.0" standalone="yes"?><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="370" height="370" viewBox="0 0 370 370" shape-rendering="crispEdges"><rect x="0" y="0" width="370" height="370" fill="#ffffff"/><path fill="#000000" d="M40 40h10v10H40V40M50 40h10v10H50V40M60 40h10v10H60V40M70 40h10v10H70V40M80 40h10v10H80V40M90 40h10v10H90V40M100 40h10v10H100V40M120 40h10v10H120V40M140 40h10v10H140V40M150 40h10v10H150V40M170 40h10v10H170V40M190 40h10v10H190V40M210 40h10v10H210V40M230 40h10v10H230V40M260 40h10v10H260V40M270 40h10v10H270V40M280 40h10v10H280V40M290 40h10v10H290V40M300 40h10v10H300V40M310 40h10v10H310V40M320 40h10v10H320V40M40 50h10v10H40V50M100 50h10v10H100V50M190 50h10v10H190V50M200 50h10v10H200V50M220 50h10v10H220V50M240 50h10v10H240V50M260 50h10v10H260V50M320 50h10v10H320V50M40 60h10v10H40V60M60 60h10v10H60V60M70 60h10v10H70V60M80 60h10v10H80V60M100 60h10v10H100V60M120 60h10v10H120V60M130 60h10v10H130V60M140 60h10v10H140V60M180 60h10v10H180V60M190 60h10v10H190V60M200 60h10v10H200V60M210 60h10v10H210V60M220 60h10v10H220V60M260 60h10v10H260V60M280 60h10v10H280V60M290 60h10v10H290V60M300 60h10v10H300V60M320 60h10v10H320V60M40 70h10v10H40V70M60 70h10v10H60V70M70 70h10v10H70V70M80 70h10v10H80V70M100 70h10v10H100V70M120 70h10v10H120V70M130 70h10v10H130V70M140 70h10v10H140V70M180 70h10v10H180V70M200 70h10v10H200V70M210 70h10v10H210V70M220 70h10v10H220V70M260 70h10v10H260V70M280 70h10v10H280V70M290 70h10v10H290V70M300 70h10v10H300V70M320 70h10v10H320V70M40 80h10v10H40V80M60 80h10v10H60V80M70 80h10v10H70V80M80 80h10v10H80V80M100 80h10v10H100V80M130 80h10v10H130V80M150 80h10v10H150V80M160 80h10v10H160V80M170 80h10v10H170V80M180 80h10v10H180V80M190 80h10v10H190V80M200 80h10v10H200V80M220 80h10v10H220V80M260 80h10v10H260V80M280 80h10v10H280V80M290 80h10v10H290V80M300 80h10v10H300V80M320 80h10v10H320V80M40 90h10v10H40V90M100 90h10v10H100V90M120 90h10v10H120V90M140 90h10v10H140V90M150 90h10v10H150V90M180 90h10v10H180V90M200 90h10v10H200V90M210 90h10v10H210V90M220 90h10v10H220V90M230 90h10v10H230V90M240 90h10v10H240V90M260 90h10v10H260V90M320 90h10v10H320V90M40 100h10v10H40V100M50 100h10v10H50V100M60 100h10v10H60V100M70 100h10v10H70V100M80 100h10v10H80V100M90 100h10v10H90V100M100 100h10v10H100V100M120 100h10v10H120V100M140 100h10v10H140V100M160 100h10v10H160V100M180 100h10v10H180V100M200 100h10v10H200V100M220 100h10v10H220V100M240 100h10v10H240V100M260 100h10v10H260V100M270 100h10v10H270V100M280 100h10v10H280V100M290 100h10v10H290V100M300 100h10v10H300V100M310 100h10v10H310V100M320 100h10v10H320V100M120 110h10v10H120V110M150 110h10v10H150V110M170 110h10v10H170V110M200 110h10v10H200V110M210 110h10v10H210V110M220 110h10v10H220V110M240 110h10v10H240V110M50 120h10v10H50V120M70 120h10v10H70V120M90 120h10v10H90V120M100 120h10v10H100V120M110 120h10v10H110V120M120 120h10v10H120V120M140 120h10v10H140V120M150 120h10v10H150V120M170 120h10v10H170V120M180 120h10v10H180V120M200 120h10v10H200V120M210 120h10v10H210V120M240 120h10v10H240V120M250 120h10v10H250V120M260 120h10v10H260V120M270 120h10v10H270V120M290 120h10v10H290V120M300 120h10v10H300V120M320 120h10v10H320V120M60 130h10v10H60V130M70 130h10v10H70V130M80 130h10v10H80V130M110 130h10v10H110V130M130 130h10v10H130V130M140 130h10v10H140V130M150 130h10v10H150V130M160 130h10v10H160V130M170 130h10v10H170V130M180 130h10v10H180V130M190 130h10v10H190V130M200 130h10v10H200V130M250 130h10v10H250V130M290 130h10v10H290V130M300 130h10v10H300V130M40 140h10v10H40V140M50 140h10v10H50V140M80 140h10v10H80V140M100 140h10v10H100V140M110 140h10v10H110V140M120 140h10v10H120V140M130 140h10v10H130V140M140 140h10v10H140V140M160 140h10v10H160V140M180 140h10v10H180V140M200 140h10v10H200V140M220 140h10v10H220V140M230 140h10v10H230V140M240 140h10v10H240V140M250 140h10v10H250V140M280 140h10v10H280V140M300 140h10v10H300V140M310 140h10v10H310V140M40 150h10v10H40V150M60 150h10v10H60V150M70 150h10v10H70V150M90 150h10v10H90V150M110 150h10v10H110V150M130 150h10v10H130V150M150 150h10v10H150V150M190 150h10v10H190V150M240 150h10v10H240V150M260 150h10v10H260V150M270 150h10v10H270V150M280 150h10v10H280V150M290 150h10v10H290V150M300 150h10v10H300V150M320 150h10v10H320V150M50 160h10v10H50V160M60 160h10v10H60V160M70 160h10v10H70V160M100 160h10v10H100V160M120 160h10v10H120V160M150 160h10v10H150V160M160 160h10v10H160V160M170 160h10v10H170V160M210 160h10v10H210V160M240 160h10v10H240V160M250 160h10v10H250V160M260 160h10v10H260V160M280 160h10v10H280V160M290 160h10v10H290V160M310 160h10v10H310V160M320 160h10v10H320V160M40 170h10v10H40V170M70 170h10v10H70V170M80 170h10v10H80V170M140 170h10v10H140V170M180 170h10v10H180V170M190 170h10v10H190V170M240 170h10v10H240V170M250 170h10v10H250V170M290 170h10v10H290V170M60 180h10v10H60V180M80 180h10v10H80V180M100 180h10v10H100V180M110 180h10v10H110V180M140 180h10v10H140V180M170 180h10v10H170V180M180 180h10v10H180V180M190 180h10v10H190V180M220 180h10v10H220V180M250 180h10v10H250V180M260 180h10v10H260V180M280 180h10v10H280V180M290 180h10v10H290V180M300 180h10v10H300V180M310 180h10v10H310V180M320 180h10v10H320V180M50 190h10v10H50V190M80 190h10v10H80V190M90 190h10v10H90V190M110 190h10v10H110V190M120 190h10v10H120V190M140 190h10v10H140V190M150 190h10v10H150V190M170 190h10v10H170V190M180 190h10v10H180V190M190 190h10v10H190V190M210 190h10v10H210V190M250 190h10v10H250V190M270 190h10v10H270V190M280 190h10v10H280V190M320 190h10v10H320V190M50 200h10v10H50V200M60 200h10v10H60V200M80 200h10v10H80V200M100 200h10v10H100V200M120 200h10v10H120V200M150 200h10v10H150V200M210 200h10v10H210V200M230 200h10v10H230V200M250 200h10v10H250V200M310 200h10v10H310V200M60 210h10v10H60V210M70 210h10v10H70V210M110 210h10v10H110V210M160 210h10v10H160V210M170 210h10v10H170V210M180 210h10v10H180V210M190 210h10v10H190V210M210 210h10v10H210V210M220 210h10v10H220V210M240 210h10v10H240V210M260 210h10v10H260V210M270 210h10v10H270V210M290 210h10v10H290V210M300 210h10v10H300V210M40 220h10v10H40V220M60 220h10v10H60V220M90 220h10v10H90V220M100 220h10v10H100V220M130 220h10v10H130V220M150 220h10v10H150V220M200 220h10v10H200V220M250 220h10v10H250V220M270 220h10v10H270V220M280 220h10v10H280V220M290 220h10v10H290V220M310 220h10v10H310V220M320 220h10v10H320V220M70 230h10v10H70V230M80 230h10v10H80V230M170 230h10v10H170V230M180 230h10v10H180V230M190 230h10v10H190V230M200 230h10v10H200V230M210 230h10v10H210V230M220 230h10v10H220V230M230 230h10v10H230V230M240 230h10v10H240V230M250 230h10v10H250V230M290 230h10v10H290V230M310 230h10v10H310V230M320 230h10v10H320V230M40 240h10v10H40V240M80 240h10v10H80V240M90 240h10v10H90V240M100 240h10v10H100V240M110 240h10v10H110V240M130 240h10v10H130V240M140 240h10v10H140V240M160 240h10v10H160V240M180 240h10v10H180V240M210 240h10v10H210V240M240 240h10v10H240V240M250 240h10v10H250V240M260 240h10v10H260V240M270 240h10v10H270V240M280 240h10v10H280V240M290 240h10v10H290V240M320 240h10v10H320V240M120 250h10v10H120V250M130 250h10v10H130V250M150 250h10v10H150V250M230 250h10v10H230V250M240 250h10v10H240V250M280 250h10v10H280V250M290 250h10v10H290V250M320 250h10v10H320V250M40 260h10v10H40V260M50 260h10v10H50V260M60 260h10v10H60V260M70 260h10v10H70V260M80 260h10v10H80V260M90 260h10v10H90V260M100 260h10v10H100V260M120 260h10v10H120V260M170 260h10v10H170V260M220 260h10v10H220V260M230 260h10v10H230V260M240 260h10v10H240V260M260 260h10v10H260V260M280 260h10v10H280V260M40 270h10v10H40V270M100 270h10v10H100V270M120 270h10v10H120V270M140 270h10v10H140V270M160 270h10v10H160V270M170 270h10v10H170V270M220 270h10v10H220V270M240 270h10v10H240V270M280 270h10v10H280V270M290 270h10v10H290V270M300 270h10v10H300V270M310 270h10v10H310V270M320 270h10v10H320V270M40 280h10v10H40V280M60 280h10v10H60V280M70 280h10v10H70V280M80 280h10v10H80V280M100 280h10v10H100V280M150 280h10v10H150V280M180 280h10v10H180V280M210 280h10v10H210V280M220 280h10v10H220V280M240 280h10v10H240V280M250 280h10v10H250V280M260 280h10v10H260V280M270 280h10v10H270V280M280 280h10v10H280V280M290 280h10v10H290V280M320 280h10v10H320V280M40 290h10v10H40V290M60 290h10v10H60V290M70 290h10v10H70V290M80 290h10v10H80V290M100 290h10v10H100V290M120 290h10v10H120V290M160 290h10v10H160V290M170 290h10v10H170V290M180 290h10v10H180V290M200 290h10v10H200V290M220 290h10v10H220V290M240 290h10v10H240V290M250 290h10v10H250V290M260 290h10v10H260V290M280 290h10v10H280V290M300 290h10v10H300V290M310 290h10v10H310V290M40 300h10v10H40V300M60 300h10v10H60V300M70 300h10v10H70V300M80 300h10v10H80V300M100 300h10v10H100V300M130 300h10v10H130V300M140 300h10v10H140V300M150 300h10v10H150V300M220 300h10v10H220V300M250 300h10v10H250V300M270 300h10v10H270V300M280 300h10v10H280V300M320 300h10v10H320V300M40 310h10v10H40V310M100 310h10v10H100V310M120 310h10v10H120V310M130 310h10v10H130V310M150 310h10v10H150V310M190 310h10v10H190V310M210 310h10v10H210V310M220 310h10v10H220V310M230 310h10v10H230V310M250 310h10v10H250V310M270 310h10v10H270V310M310 310h10v10H310V310M40 320h10v10H40V320M50 320h10v10H50V320M60 320h10v10H60V320M70 320h10v10H70V320M80 320h10v10H80V320M90 320h10v10H90V320M100 320h10v10H100V320M150 320h10v10H150V320M160 320h10v10H160V320M180 320h10v10H180V320M240 320h10v10H240V320M260 320h10v10H260V320M280 320h10v10H280V320M290 320h10v10H290V320M310 320h10v10H310V320"/></svg>`;

/**
 * @type {import("@keywitch/rpc").KeyMetadataRPC}
 */
const module = {
  unpin_key(id) {
    const item = MEMORY_STORE.find(e => e.id === id);

    if (item) {
      item.pinned = false;
      return Promise.resolve({
        success: true
      });
    } else {
      return Promise.resolve({
        success: false,
        error: "Item does not exists"
      });
    }
  },
  update_key(id, options) {
    const validationResult = parse_KeyOptions(options);

    if (validationResult?.success === false) return Promise.resolve(validationResult);

    const key = MEMORY_STORE.find(e => e.id === id);
    if (key) {

      if (options.custom_icon && options.custom_icon.size > 0) {
        const newImageUrl = URL.createObjectURL(options.custom_icon);

        // Evict old image url
        if (key.custom_icon) {
          const oldImageUrl = IMAGE_STORE.get(key);

          if (oldImageUrl) {
            URL.revokeObjectURL(oldImageUrl);
          }
        }

        IMAGE_STORE.set(key, newImageUrl);
        key.custom_icon = newImageUrl;
      }

      key.charset = options.charset;
      key.domain = options.domain;
      key.notes = options.notes;
      key.revision = options.revision;
      key.target_size = options.target_size;
      key.user_name = options.user_name;
      key.tags = options.tags ?? [];

      return Promise.resolve({
        success: true,
        data: structuredClone(key)
      })
    } else {
      return Promise.resolve({
        success: false,
        error: "Item does not exists"
      })
    }
  },
  pin_key(id) {
    const item = MEMORY_STORE.find(e => e.id === id);

    if (item) {
      item.pinned = true;
      return Promise.resolve({
        success: true
      });
    } else {
      return Promise.resolve({
        success: false,
        error: "Item does not exists"
      });
    }
  },
  get_key_collection(filter) {
    let collection = structuredClone(MEMORY_STORE);
    if (filter) {

      /**
       * @return {boolean}
       * @param {import("@keywitch/rpc").KeyMetadataItem} item
       */
      const filterFn = (item) => {
        if (filter.tag) {
          for (const tag of filter.tag) {
            if (item.tags.includes(tag)) {
              return true;
            }
          }
        }

        if (filter.domain) {
          for (const domain of filter.domain) {
            if (item.domain.includes(domain)) {
              return true;
            }
          }
        }

        if (filter.username) {
          for (const username of filter.username) {
            if (item.user_name.includes(username)) {
              return true;
            }
          }
        }

        return false;
      }

      collection = collection.filter(filterFn);
    }

    return Promise.resolve({
      success: true,
      data: collection
    });
  },
  remove_key(id) {
    const index = MEMORY_STORE.findIndex(e => e.id === id);

    if (index > -1) {
      const [removed] = MEMORY_STORE.splice(index, 1);
      const imageUrl = IMAGE_STORE.get(removed);

      if (imageUrl) {
        URL.revokeObjectURL(imageUrl);
      }

      return Promise.resolve({
        success: true
      });
    } else {
      return Promise.resolve({
        success: false,
        error: "Item does not exists"
      });
    }
  },
  get_pinned_items() {
    return Promise.resolve({
      success: true,
      data: structuredClone(MEMORY_STORE.filter(e => e.pinned))
    });
  },
  generate_password(id, outputType) {
    const item = MEMORY_STORE.findIndex(e => e.id === id);

    /** @type {string} */
    let data;

    switch (outputType) {
      case "base64": {
        data = btoa("test")
        break;
      }
      case "qr": {
        data = example_qr_raw;
        break;
      }
      case "json": {
        data = JSON.stringify({pass: "test", algo: "scrypt1", ver: "v1"}, undefined, 2)
        break;
      }
      case "text": {
        data = "test"
        break;
      }
      case "uri": {
        data = encodeURIComponent("test@$%")
        break;
      }
      default:
        return Promise.resolve({
          success: false,
          error: "Unknown password output type."
        });
    }

    if (item > -1) {
      MEMORY_STORE.slice(item, 1);
      return Promise.resolve({
        success: true,
        data: data
      });
    } else {
      return Promise.resolve({
        success: false,
        error: "Item does not exists"
      });
    }
  },
  create_key(options) {
    const validationResult = parse_KeyOptions(options);

    if (validationResult?.success === false) return Promise.resolve(validationResult);

    const imageUrl = options.custom_icon && options.custom_icon.size > 0
      ? URL.createObjectURL(options.custom_icon)
      : undefined;

    /**
     * @type {import("@keywitch/rpc").KeyMetadataItem}
     */
    const newItem = {
      id: NEXT_ID,
      charset: options.charset,
      domain: options.domain,
      notes: options.notes,
      revision: options.revision,
      target_size: options.target_size,
      user_name: options.user_name,
      created_at: Date.now(),
      pinned: false,
      tags: options.tags ?? [],
      custom_icon: imageUrl
    };

    if (imageUrl) {
      IMAGE_STORE.set(newItem, imageUrl);
    }
    MEMORY_STORE.push(newItem);
    NEXT_ID++;

    return Promise.resolve({
      success: true,
      data: structuredClone(newItem)
    })
  },
};

export default module;
